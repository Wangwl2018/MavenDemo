<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.midea.dao.SysUserDao">
    <!-- SysUser的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_SysUser_Map" type="com.midea.entity.SysUser">
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="loginName" property="loginname" />
        <result column="passWord" property="password" />
        <result column="sex" property="sex" />
        <result column="age" property="age" />
    </resultMap>

    <!-- 数据库中表名为:sys_user的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="sys_user_Column">
        sys_user.id as id
        ,sys_user.name as name
        ,sys_user.loginName as loginName
        ,sys_user.passWord as passWord
        ,sys_user.sex as sex
        ,sys_user.age as age
    </sql>

    <select id="queryUserByname" parameterType="java.lang.String" resultMap="result_SysUser_Map">
        select
        <include refid="sys_user_Column"/>
        from sys_user
        where sys_user.loginName = #{loginname}
    </select>


    <!--获得类名为:SysUser对应的数据库表的数据总行数 -->
    <select id="getSysUserRowCount" resultType="java.lang.Long">
        select count(id) from sys_user
    </select>
    <!-- 获得类名为:SysUser对应数据库中表的数据集合 -->
    <select id="selectSysUser" resultMap="result_SysUser_Map">
        select 
        <include refid="sys_user_Column" /> 
        from sys_user
    </select> 

    <!-- 获得一个SysUser对象,以参数SysUser对象中不为空的属性作为条件进行查询-->
    <select id="selectSysUserByObj" parameterType="com.midea.entity.SysUser" resultMap="result_SysUser_Map">
        select 
            <include refid="sys_user_Column" /> 
        from sys_user
        <where>
            <if test="age != null "> and sys_user.age = #{age}</if>
            <if test="sex != null "> and sys_user.sex = #{sex}</if>
            <if test="password != null "> and sys_user.passWord = #{password}</if>
            <if test="loginname != null "> and sys_user.loginName = #{loginname}</if>
            <if test="name != null "> and sys_user.name = #{name}</if>
            <if test="id != null "> and sys_user.id = #{id}</if>
        </where>
    </select> 

    <!-- 通过SysUser的id获得对应数据库中表的数据对象-->
    <select id="selectSysUserById" parameterType="java.lang.Integer" resultMap="result_SysUser_Map">
        select 
            <include refid="sys_user_Column" /> 
        from sys_user
        where sys_user.id = #{id}
    </select> 

    <!-- 将SysUser插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertSysUser" parameterType="com.midea.entity.SysUser">
        insert into sys_user(id,name,loginName,passWord,sex,age) 
        values(#{id},#{name},#{loginname},#{password},#{sex},#{age})
    </insert>

    <!-- 将SysUser中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptySysUser" parameterType="com.midea.entity.SysUser">
        insert into sys_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="name != null">name,</if>
            <if test="loginname != null">loginName,</if>
            <if test="password != null">passWord,</if>
            <if test="sex != null">sex,</if>
            <if test="age != null">age,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="name != null"> #{name},</if>
            <if test="loginname != null"> #{loginname},</if>
            <if test="password != null"> #{password},</if>
            <if test="sex != null"> #{sex},</if>
            <if test="age != null"> #{age},</if>
        </trim>
    </insert>

    <!-- 通过SysUser的id将数据库表中对应的数据删除-->
    <delete id="deleteSysUserById" parameterType="java.lang.Integer">
        delete from sys_user
        where id = #{id}
    </delete>

    <!-- 通过SysUser的id将SysUser的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateSysUserById" parameterType="com.midea.entity.SysUser">
        update sys_user set
            name=#{name}
            ,loginName=#{loginname}
            ,passWord=#{password}
            ,sex=#{sex}
            ,age=#{age}
        where id=#{id}
    </update>

    <!-- 通过SysUser的id将SysUser中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptySysUserById" parameterType="com.midea.entity.SysUser">
        update sys_user
        <set>
            <if test="name != null">
                name=#{name},
            </if>
            <if test="loginname != null">
                loginName=#{loginname},
            </if>
            <if test="password != null">
                passWord=#{password},
            </if>
            <if test="sex != null">
                sex=#{sex},
            </if>
            <if test="age != null">
                age=#{age},
            </if>
        </set>
        where id=#{id}
    </update>

</mapper>